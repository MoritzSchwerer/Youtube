from ..animation.animation import Animation
from ..mobject.mobject import Mobject
from ..scene.scene import Scene
from _typeshed import Incomplete
from typing import Iterable, Sequence

class ThreeDScene(Scene):
    ambient_camera_rotation: Incomplete
    default_angled_camera_orientation_kwargs: Incomplete
    def __init__(self, camera_class=..., ambient_camera_rotation: Incomplete | None = ..., default_angled_camera_orientation_kwargs: Incomplete | None = ..., **kwargs) -> None: ...
    def set_camera_orientation(self, phi: float | None = ..., theta: float | None = ..., gamma: float | None = ..., zoom: float | None = ..., focal_distance: float | None = ..., frame_center: Mobject | Sequence[float] | None = ..., **kwargs): ...
    def begin_ambient_camera_rotation(self, rate: float = ..., about: str = ...): ...
    def stop_ambient_camera_rotation(self, about: str = ...) -> None: ...
    def begin_3dillusion_camera_rotation(self, rate: float = ..., origin_phi: float | None = ..., origin_theta: float | None = ...): ...
    def stop_3dillusion_camera_rotation(self) -> None: ...
    camera: Incomplete
    def move_camera(self, phi: float | None = ..., theta: float | None = ..., gamma: float | None = ..., zoom: float | None = ..., focal_distance: float | None = ..., frame_center: Mobject | Sequence[float] | None = ..., added_anims: Iterable[Animation] = ..., **kwargs): ...
    def get_moving_mobjects(self, *animations: Animation): ...
    def add_fixed_orientation_mobjects(self, *mobjects: Mobject, **kwargs): ...
    def add_fixed_in_frame_mobjects(self, *mobjects: Mobject): ...
    def remove_fixed_orientation_mobjects(self, *mobjects: Mobject): ...
    def remove_fixed_in_frame_mobjects(self, *mobjects: Mobject): ...
    def set_to_default_angled_camera_orientation(self, **kwargs) -> None: ...

class SpecialThreeDScene(ThreeDScene):
    cut_axes_at_radius: Incomplete
    camera_config: Incomplete
    three_d_axes_config: Incomplete
    sphere_config: Incomplete
    default_angled_camera_position: Incomplete
    low_quality_config: Incomplete
    def __init__(self, cut_axes_at_radius: bool = ..., camera_config=..., three_d_axes_config=..., sphere_config=..., default_angled_camera_position=..., low_quality_config=..., **kwargs) -> None: ...
    def get_axes(self): ...
    def get_sphere(self, **kwargs): ...
    def get_default_camera_position(self): ...
    def set_camera_to_default_position(self) -> None: ...
