import os
from _typeshed import Incomplete

class TexTemplate:
    default_documentclass: str
    default_preamble: str
    default_placeholder_text: str
    default_tex_compiler: str
    default_output_format: str
    default_post_doc_commands: str
    tex_compiler: Incomplete
    output_format: Incomplete
    documentclass: Incomplete
    preamble: Incomplete
    placeholder_text: Incomplete
    post_doc_commands: Incomplete
    def __init__(self, tex_compiler: str | None = ..., output_format: str | None = ..., documentclass: str | None = ..., preamble: str | None = ..., placeholder_text: str | None = ..., post_doc_commands: str | None = ..., **kwargs) -> None: ...
    def __eq__(self, other: TexTemplate) -> bool: ...
    def add_to_preamble(self, txt: str, prepend: bool = ...): ...
    def add_to_document(self, txt: str): ...
    def get_texcode_for_expression(self, expression: str): ...
    def get_texcode_for_expression_in_env(self, expression: str, environment: str): ...
    def copy(self) -> TexTemplate: ...

class TexTemplateFromFile(TexTemplate):
    template_file: Incomplete
    def __init__(self, *, tex_filename: str | os.PathLike = ..., **kwargs) -> None: ...
    def file_not_mutable(self) -> None: ...
    def add_to_preamble(self, txt, prepend: bool = ...) -> None: ...
    def add_to_document(self, txt) -> None: ...
