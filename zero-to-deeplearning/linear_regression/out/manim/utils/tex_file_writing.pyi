from .. import config as config, logger as logger
from _typeshed import Incomplete
from collections.abc import Generator
from manim.utils.tex import TexTemplate as TexTemplate
from pathlib import Path

def tex_hash(expression): ...
def tex_to_svg_file(expression: str, environment: str | None = ..., tex_template: TexTemplate | None = ...): ...
def generate_tex_file(expression: str, environment: str | None = ..., tex_template: TexTemplate | None = ...): ...
def tex_compilation_command(tex_compiler: str, output_format: str, tex_file: Path, tex_dir: Path) -> str: ...
def insight_inputenc_error(matching) -> Generator[Incomplete, None, None]: ...
def insight_package_not_found_error(matching) -> Generator[Incomplete, None, None]: ...
def compile_tex(tex_file: Path, tex_compiler: str, output_format: str) -> Path: ...
def convert_to_svg(dvi_file: Path, extension: str, page: int = ...): ...
def print_all_tex_errors(log_file: Path, tex_compiler: str, tex_file: Path) -> None: ...

LATEX_ERROR_INSIGHTS: Incomplete

def print_tex_error(tex_compilation_log, error_start_index, tex_source) -> None: ...
