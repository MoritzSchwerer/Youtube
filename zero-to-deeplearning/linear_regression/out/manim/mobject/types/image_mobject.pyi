from ...constants import *
from ...mobject.mobject import Mobject
from _typeshed import Incomplete

class AbstractImageMobject(Mobject):
    pixel_array_dtype: Incomplete
    scale_to_resolution: Incomplete
    def __init__(self, scale_to_resolution: int, pixel_array_dtype: str = ..., resampling_algorithm=..., **kwargs) -> None: ...
    def get_pixel_array(self) -> None: ...
    def set_color(self, color, alpha: Incomplete | None = ..., family: bool = ...) -> None: ...
    resampling_algorithm: Incomplete
    def set_resampling_algorithm(self, resampling_algorithm: int): ...
    points: Incomplete
    def reset_points(self) -> None: ...

class ImageMobject(AbstractImageMobject):
    fill_opacity: int
    stroke_opacity: int
    invert: Incomplete
    image_mode: Incomplete
    pixel_array: Incomplete
    path: Incomplete
    pixel_array_dtype: Incomplete
    def __init__(self, filename_or_array, scale_to_resolution: int = ..., invert: bool = ..., image_mode: str = ..., **kwargs) -> None: ...
    def get_pixel_array(self): ...
    color: Incomplete
    def set_color(self, color, alpha: Incomplete | None = ..., family: bool = ...): ...
    def set_opacity(self, alpha: float): ...
    def fade(self, darkness: float = ..., family: bool = ...): ...
    def interpolate_color(self, mobject1: ImageMobject, mobject2: ImageMobject, alpha: float): ...
    def get_style(self): ...

class ImageMobjectFromCamera(AbstractImageMobject):
    camera: Incomplete
    default_display_frame_config: Incomplete
    pixel_array: Incomplete
    def __init__(self, camera, default_display_frame_config: Incomplete | None = ..., **kwargs) -> None: ...
    def get_pixel_array(self): ...
    display_frame: Incomplete
    def add_display_frame(self, **kwargs): ...
    def interpolate_color(self, mobject1, mobject2, alpha) -> None: ...
